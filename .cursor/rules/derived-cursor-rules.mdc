---
description: AI rules derived by SpecStory from the project AI interaction history
globs: *
---

## AI Coding Assistant Rules File

This file defines all project rules, coding standards, workflow guidelines, references, documentation structures, and best practices.  It is a living document and will evolve with the project.

## TECH STACK

- TypeScript
- Node.js
- Yarn

## PROJECT DOCUMENTATION & CONTEXT SYSTEM

- All documentation should follow the Markdown format.
-  Use SpecStory for issue tracking and documentation generation.

## CODING STANDARDS

- Maintain consistent indentation (2 spaces).
- Follow TypeScript type annotations consistently.
- Commit messages should be clear, concise, and descriptive.

## WORKFLOW & RELEASE RULES

- All code changes must be reviewed before merging.
-  New features must be thoroughly tested before release.


## DEBUGGING

- Utilize the debugger effectively for troubleshooting.
- Log relevant information for debugging purposes.


## FIBER SORTING

- All fiber sorting logic should be consolidated into a single function: `orderFibers`. This function should support various ordering options including:
    - Prioritizing configured fibers.
    - Alphabetical sorting.
    - Special handling of core and dotfiles fibers.
    - Special dependent sorting (e.g., 'dev' first for 'core').
    - Including or excluding discovered fibers.
    - Filtering disabled fibers.
    - Reversing the dependency direction.
- The `orderFibers` function is located in `src/commands/fibers/dependency-utils.ts`.
-  The function signature should include an `options` object to control the sorting behavior.

## COMMAND OUTPUT FORMATTING

- The `fiber deps --detailed` command output should prioritize user-friendliness over implementation details.  Further clarification needed on the optimal display format for this command's output.  Current attempts (using "→" to represent dependencies) are insufficient. A simpler and more intuitive representation is needed.  User feedback suggests that the current "source → dependencies" format is not ideal and a simpler representation is required.  Further user input is required to determine the optimal output format.


## KNOWN CONFLICTS

- There was a conflict between multiple fiber sorting functions. This has been resolved by merging all sorting logic into a single, unified function (`orderFibers`).
- Conflict:  The initial attempt to improve the `fiber deps --detailed` command output was deemed unsatisfactory. Further user input is required to determine the optimal output format.  The user has requested a more user-friendly and less implementation-detail-focused output.